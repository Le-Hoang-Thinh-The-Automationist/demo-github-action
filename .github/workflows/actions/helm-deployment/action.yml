name: Deploy using Helm Chart
description: "Deploy using Helm Chart"
inputs:
    # Configuration for the kubectl to access to the minikube's API server
    ca_cert:
      description: "CA crt in order for the kubectl to trust the SSL Cert from the API server"
      required: true

    client_key:
      description: "CA crt in order for the kubectl to trust the SSL Cert from the API server"
      required: true

    client_cert:
      description: "CA crt in order for the kubectl to trust the SSL Cert from the API server"
      required: true

    kubeconfig:
      description: "The default Kubeconfig to connect to the K8s API server"
      required: true    

    ca_cert_filepath:
      description: "Filepath for storing the ca_cert"
      default: ".kube/ca_cert_filepath"

    client_key_filepath:
      description: "Filepath for storing the client_key"
      default: ".kube/client_key_filepath"

    client_cert_filepath:
      description: "Filepath for storing the client_cert"
      default: ".kube/client_cert_filepath"

    kubeconfig_filepath:
      description: "Filepath for storing the kubeconfig"
      default: ".kube/kubeconfig_filepath"

    # Configuration for Helm Chart Deployment 
    helm_input_image_repository:
      description: "Image"
      required: true

    helm_input_image_tag:
      description: "Image"
      required: true

    helm_chart:
      description: "Helm Chart to deploy"
      required: true

    helm_namespace:
      description: Which namespace should the helm package to be deployed in
  
runs:
    using: 'composite'
  
    steps:
      - uses: actions/checkout@v4

      - name: Set up KUBECONFIG
        env:
          # File content
          KUBE_CA_CERT: ${{ inputs.ca_cert }}
          KUBE_CLIENT_KEY: ${{ inputs.client_key }}
          KUBE_CLIENT_CERT: ${{ inputs.client_cert }}
          KUBECONFIG_DATA: ${{ inputs.kubeconfig }}
          # Filepath
          KUBE_CA_CERT_FILEPATH: ${{ inputs.ca_cert_filepath }}
          KUBE_CLIENT_KEY_FILEPATH: ${{ inputs.client_key_filepath }}
          KUBE_CLIENT_CERT_FILEPATH: ${{ inputs.client_cert_filepath }}
          KUBECONFIG_DATA_FILEPATH: ${{ inputs.kubeconfig_filepath }}
        run: |
          mkdir .kube
          echo "$KUBE_CA_CERT" > $KUBE_CA_CERT_FILEPATH
          echo "$KUBE_CLIENT_KEY" > $KUBE_CLIENT_KEY_FILEPATH
          echo "$KUBE_CLIENT_CERT" > $KUBE_CLIENT_CERT_FILEPATH
          echo "$KUBECONFIG_DATA" > $KUBECONFIG_DATA_FILEPATH
          ls .kube
        shell: bash

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        shell: bash

      - name: Deploy Helm Chart
        env:
          KUBECONFIG_DATA_FILEPATH: ${{ inputs.kubeconfig_filepath }}

        run: |
          KUBECONFIG=$KUBECONFIG_DATA_FILEPATH helm upgrade --install ${{inputs.helm_chart_name }} ${{inputs.helm_chart }} \
            --set deployment.pod.image.repository='${{ inputs.helm_input_image_repository }}' \
            --set deployment.pod.image.tag='${{ inputs.helm_input_image_tag }}' \
            --namespace ${{ inputs.helm_namespace }} \
            --create-namespace \
        shell: bash
